# Redirect HTTP → HTTPS
server {
    listen 80;
    server_name localhost;

    return 301 https://$host$request_uri;
}

# HTTPS frontend + API proxy
server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate     /etc/nginx/certs/localhost+2.pem;
    ssl_certificate_key /etc/nginx/certs/localhost+2-key.pem;

    root /usr/share/nginx/html;
    index index.html;

    # Serve React frontend
    location / {
        try_files $uri /index.html;
    }

    # Proxy API requests to backend
    location /api {
        proxy_pass https://assetapi:8081/api;
        proxy_ssl_verify off;   # ignore backend’s self-signed cert
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

   location /notificationHub {
        proxy_pass https://assetapi:8081/notificationHub;
        proxy_ssl_verify off;

        # Required for WebSockets
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }


}
